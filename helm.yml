# for HELM NGIX-INGRESS LOAD BALANCER deployment 
#======vi app.yml=====================mongodb container / PersistentVolumeClaim / persistentVolumeClaim ==================================

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodbpvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: mongodbrs
spec:
  selector:
    matchLabels:
      app: mongodb
  template:
     metadata:
       name: mongodbpod
       labels:
         app: mongodb
     spec:
       volumes:
       - name: pvc
         persistentVolumeClaim:
           claimName: mongodbpvc
       containers:
       - name: mongodbcontainer
         image: mongo
         ports:
         - containerPort: 27017
         env:
         - name: MONGO_INITDB_ROOT_USERNAME
           valueFrom:
             configMapKeyRef:
               name: mongo-configmap
               key: db-username
         - name: MONGO_INITDB_ROOT_PASSWORD
           valueFrom:
             secretKeyRef:
               name: mongo-db-password
               key: db-password
         volumeMounts:
         - name: pvc
           mountPath: /data/db

---
apiVersion: v1
kind: Service
metadata:
  name: mongo
spec:
  type: ClusterIP
  selector:
    app: mongodb
  ports:
  - port: 27017
    targetPort: 27017





---
#========vi app.yml=========== springboot app pod / ConfigMap / Secret / Service ==================================

---
#bottom for springapp deployment

apiVersion: apps/v1
kind: Deployment
metadata:
  name: springapp
spec:
  replicas: 2
  selector:
    matchLabels:
      app: springapp
  template:
    metadata:
      name: springapppod
      labels:
        app: springapp
    spec:
      containers:
        - name: springappcontainer
          image: mylandmarktech/spring-boot-mongo
          ports:
          - containerPort: 8080
          env:
          - name: MONGO_DB_USERNAME
            valueFrom:
              configMapKeyRef:
                name: mongo-configmap
                key: db-username
          - name: MONGO_DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mongo-db-password
                key: db-password
          - name: MONGO_DB_HOSTNAME
            value: mongo
---
apiVersion: v1
kind: Service
metadata:
  name: springapp
spec:
  selector:
    app: springapp
  ports:
  - port: 80
    targetPort: 8080
  type: ClusterIP

---
kind: ConfigMap
apiVersion: v1
metadata:
  name: mongo-configmap
data:
  db-username: devdb
---
apiVersion: v1
kind: Secret
metadata:
  name: mongo-db-password
type: Opaque
data:
  db-password: ZGV2ZGJAMTIz


---
# ========vi mavenapp.yml===========  mavenweb app 2 / Service ==================================

apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp
spec:
  replicas: 2
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      name: springapppod
      labels:
        app: myapp
    spec:
      containers:
        - name: myappc
          image: mylandmarktech/maven-web-app
          ports:
          - containerPort: 8080
---

apiVersion: v1
kind: Service
metadata:
  name: myappsvc
spec:
  selector:
    app: myapp
  ports:
  - port: 80
    targetPort: 8080
  type: ClusterIP

  
  
# ========vi ingress-resource.yml==spring-boot-app will work===not working for /app maven-web-app now ========================
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ingress-resource-1
spec:
  ingressClassName: nginx
  rules:
  - host: ismailafintech.com
    # secretName: mylandmarktech-ingress-tls
    http:
      paths:
      # Default Path(/)
      - backend:
          serviceName: springapp
          servicePort: 80
      - path: /app
        backend:
          serviceName: myappsvc
          servicePort: 80
      - path: /java-web-app
        backend:
          serviceName: javawebapp
          servicePort: 80



# ========vi ingress-resource.yml===============hostbase routing working =========================
#apiVersion: networking.k8s.io/v1beta1
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ingress-resource-1
spec:
  ingressClassName: nginx
  rules:
  - host: ismailatechnology.click
    # secretName: mylandmarktech-ingress-tls
    http:
      paths:
      # Default Path(/)
      - backend:
          serviceName: springapp
          servicePort: 80
  - host: app.ismailatechnology.click
    # secretName: mylandmarktech-ingress-tls
    http:
      paths:
      # Default Path(/)
      - backend:
          serviceName: myappsvc
          servicePort: 80

