#vi /etc/ansible/hosts
[master]
172.31.31.85 ansible_user=ubuntu ansible_ssh_private_key_file=/tmp/k8.pem
#172.31.31.85
[appserver]
172.31.1.172 ansible_user=ubuntu ansible_ssh_private_key_file=/tmp/k8.pem
[webservers]
172.31.19.87 ansible_user=ubuntu ansible_ssh_private_key_file=/tmp/k8.pem
[dbservers]
172.31.19.60 ansible_user=ec2-user ansible_ssh_private_key_file=/tmp/k8.pem
[docker]
172.31.4.163 # ansible_user=ansible ansible_ssh_public_key_file=~/.ssh/id_rsa.pub
[dk]
172.31.4.163 ansible_user=ansible ansible_password=class26
#172.31.6.54 ansible_user=ubuntu ansible_ssh_private_key_file=/tmp/k8.pem


#vi index.html
<h2>Ansible class26 is good<h2>
<h1>Very soon, Am going to get multiple deVops 6 figure jobs<h1>
<p>AMEN</p>


#vi v/etc/ansible/ansible.cfg
# uncomment this to disable SSH key host checking
host_key_checking = False

ansible@ansible:~$ ssh-keygen
cat /home/ansible/.ssh/id_rsa.pub

# ansible-playbook -b ansible-createuser.yml -u <userName> --private-key=~/devops.pem
- hosts: all
  become: true
  tasks:
  - name: Create Ansible User
    user:
      name: ansible
      create_home: true
      shell: /bin/bash
      comment: "Ansible Management Account"
      expires: -1
      password: "{{ 'DevOps@2020' | password_hash('sha512','A512') }}"
  - name: Deploy Local User SSH Key
    authorized_key:
      user: ansible
      state: present
      manage_dir: true
      key: "{{ lookup('file', '/home/ansible/.ssh/id_rsa.pub') }}"
  - name: Setup sudo Access for Ansible User
    copy:
      dest: /etc/sudoers.d/ansible
      content: 'ansible ALL=(ALL) NOPASSWD: ALL'
      validate: /usr/sbin/visudo -cf %s
  - name: Disable Password Authentication
    lineinfile:
      dest=/etc/ssh/ssh_config
      regexp='^PasswordAuthentication'
      line="PasswordAuthentication no"
      state=present
      backup=yes
    notify:
      - restart ssh
  handlers:
  - name: restart ssh
    service:
      name=sshd
      state=restarted
            
#==========================2===============================     
#this 2 play-book script will work the same
#vi apache.yml
- hosts: dbservers
  become: true
  tasks:
    - name: install apache
      yum: name=httpd state=present
    - name: Insert Index page
      copy: src=index.html dest=/var/www/html/index.html
    - name: Start apache
      service: name=httpd state=started
      
---

- hosts: dbservers
  become: true
  tasks:
    - name: install apache
      yum:
        name: httpd
        state: latest
    - name: Insert Index page
      copy:
        src: index.html
        dest: /var/www/html/index.html
    - name: Start apache
      service:
        name: httpd
        state: started

 #==========================3===============================     
# to install & remove packages with loop in an array
#vi pkgmgt.yml
#- hosts: dk #(50 redhat / ubuntu)

- hosts: dk
  become: yes
  tasks:
   - name: Install Packages
     yum:
      name: ['unzip', 'git', 'nano', 'wget']
      update_cache: yes
      state: latest
      
- hosts: dk
  become: yes
  tasks:
   - name: Install Packages
     apt:
      name: ['unzip', 'git', 'nano', 'wget']
      update_cache: yes
      state: absent
     when: ansible_os_family == "Debian"
     
  #==========================4===============================    
  #using tag to skip
  
 #vi apache.yml
- hosts: dbservers
  become: true
  tasks:
    - name: install apache
      tags:
      - install 
      yum: name=httpd state=present
    - name: copy the Index page
      tags:
      - copy 
      template: src=index.html dest=/var/www/html/index.html
    - name: Start apache
      service: name=httpd state=started
      tags:
      - start  

#vi tag.yml

- hosts: localhost
  become: yes
  tasks:
  - name: Install Apache HTTP server on RedHat Server
    tags:
      - install
    yum: 
      name: httpd
      state: present
    when: ansible_os_family == "RedHat"
  - name: Install Apache HTTP server on Ubuntu server
    tags:
      - install
      - start
    apt:
      name: apache2
      state: present
    when: ansible_os_family == "Debian"
  - name: Install Apache HTTP server on CentOS server
    yum: 
      name: httpd
      state: present
    when: 
      - ansible_facts['distribution'] == "CentOS"
      - ansible_facts['distribution_major_version'] == "7"
  - name: Print the Ansible free memory
    debug:
      msg: "free memory is {{ansible_memory_mb.real.free}}"
      
      
#==========================5===============================    
#deployed simple app on redhat server.

#vi apache23.yml
- hosts: dbservers
  become: true
  vars:
  tasks:
    - name: install apache
      package:
        name: httpd
        state: latest
    - name: start  apache
      systemd:
        name: httpd
        state: started
    - name: copy index.html
      copy:
        src: /tmp/index.html
        dest: /var/www/html/

#vi /tmp/index.html
<h1>  Welcome to Lanmark </h1>
<h1>  Welcome to Lanmark </h1>
<h1> Welcome to Ansible </h1>

#==========================6===============================    


